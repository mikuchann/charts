apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nacos.fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    replica-number:
  annotations:
  {{- toYaml .Values.annotations | indent 4 }}
spec:
  {{- if eq .Values.global.mode "cluster" }}
  serviceName: nacos-hs
  replicas: 3
  {{- else }}
  serviceName: {{ .Values.service.name }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "nacos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "nacos.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: nacos
    spec:
      affinity:
        podAntiAffinity:
          {{ include "affinity.podAntiAffinity" .  | indent 10 | trim }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if (eq .Values.global.mode "cluster") }}
      initContainers:
        - name: peer-finder-plugin-install
          image: {{ .Values.global.registry.address }}/{{.Values.global.images.plugin.repository}}:{{.Values.global.images.plugin.tag}}
          imagePullPolicy: Always
          env:
          - name: MYSQL_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: nacos-cm
                key: mysql.db.host
          - name: MYSQL_SERVICE_DB_NAME
            valueFrom:
              configMapKeyRef:
                name: nacos-cm
                key: mysql.db.name
          - name: MYSQL_SERVICE_PORT
            valueFrom:
              configMapKeyRef:
                name: nacos-cm
                key: mysql.port
          - name: MYSQL_SERVICE_USER
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.nacos.storage.db.basicAuthSecretName }}"
                key: mysql.user
          - name: MYSQL_SERVICE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.nacos.storage.db.basicAuthSecretName }}"
                key: mysql.password
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - mountPath: /home/nacos/plugins/peer-finder
              name: data
              subPath: peer-finder
            - name: data
              mountPath: /home/nacos/data
              subPath: data
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.registry.address }}/{{.Values.global.images.nacos.repository}}:{{.Values.global.images.nacos.tag}}
          imagePullPolicy: Always
          startupProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 30
            timeoutSeconds: 10
            httpGet:
              scheme: HTTP
              port: {{ .Values.nacos.serverPort }}
              path: {{ include "nacos.contextPathPrefix" . }}/v1/console/health/readiness
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            httpGet:
              scheme: HTTP
              port: {{ .Values.nacos.serverPort }}
              path: {{ include "nacos.contextPathPrefix" . }}/v1/console/health/liveness
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            httpGet:
              scheme: HTTP
              port: {{ .Values.nacos.serverPort }}
              path: {{ include "nacos.contextPathPrefix" . }}/v1/console/health/readiness
          ports:
            - name: http
              containerPort: {{ .Values.nacos.serverPort }}
              protocol: TCP
            - containerPort: {{ add .Values.nacos.serverPort 1000}}
              name: client-rpc
            - containerPort: {{ add .Values.nacos.serverPort 1001 }}
              name: raft-rpc
            - containerPort: 7848
              name: old-raft-rpc
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: NACOS_SERVER_PORT
              value: {{ .Values.nacos.serverPort | quote }}
            - name: NACOS_APPLICATION_PORT
              value: {{ .Values.nacos.serverPort | quote }}
            - name: PREFER_HOST_MODE
              value: {{ .Values.nacos.preferhostmode | quote }}
            {{- if eq .Values.global.mode "standalone" }}
            - name: MODE
              value: "standalone"

            {{- else if eq .Values.global.mode "cluster" }}
            - name: SERVICE_NAME
              value: "nacos-hs"
            - name: DOMAIN_NAME
              value: {{ .Values.nacos.domainName | quote }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            {{- end }}
            {{- if eq .Values.nacos.storage.type "mysql" }}
            - name: SPRING_DATASOURCE_PLATFORM
              value: "mysql"
            - name: MYSQL_SERVICE_HOST
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.db.host
            - name: MYSQL_SERVICE_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.db.name
            - name: MYSQL_SERVICE_PORT
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.port
            - name: MYSQL_SERVICE_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.nacos.storage.db.basicAuthSecretName }}"
                  key: mysql.user
            - name: MYSQL_SERVICE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.nacos.storage.db.basicAuthSecretName }}"
                  key: mysql.password
            - name: MYSQL_SERVICE_DB_PARAM
              valueFrom:
                configMapKeyRef:
                  name: nacos-cm
                  key: mysql.param
            - name: NACOS_AUTH_IDENTITY_KEY
              value: "{{ .Values.nacos.core.auth.server.identity.key }}"
            - name: NACOS_AUTH_IDENTITY_VALUE
              value: "{{ .Values.nacos.core.auth.server.identity.value }}"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: MYSQL_POOL_CONFIG_CONNECTIONTIMEOUT
              value: "{{ .Values.nacos.storage.db.pool.config.connectionTimeout }}"
            - name: MYSQL_POOL_CONFIG_MAXIMUMPOOLSIZE
              value: "{{ .Values.nacos.storage.db.pool.config.maximumPoolSize }}"
            - name: MYSQL_POOL_CONFIG_MINIMUMIDLE
              value: "{{ .Values.nacos.storage.db.pool.config.minimumIdle }}"
            {{else}}
            - name: EMBEDDED_STORAGE
              value: embedded
            {{end}}
            - name: FUNCTION_MODE
              value: "{{ .Values.global.functionMode }}"
            - name: JVM_INITIALRAMPERCENTAGE
              value: "{{ .Values.jvm.xxInitialRAMPercentage }}"
            - name: JVM_MAXRAMPERCENTAGE
              value: "{{ .Values.jvm.xxMaxRAMPercentage }}"
            - name: NAMING_EMPTYSERVICE_AUTOCLEAN
              value: "{{ .Values.nacos.naming.emptyService.autoClean }}"
            - name: NAMING_EMPTYSERVICE_CLEAN_INITIALDELAYMS
              value: "{{ .Values.nacos.naming.emptyService.clean.initialDelayMs }}"
            - name: NAMING_EMPTYSERVICE_CLEAN_PERIODTIMEMS
              value: "{{ .Values.nacos.naming.emptyService.clean.periodTimeMs }}"
          volumeMounts:
            - name: data
              mountPath: /home/nacos/plugins/peer-finder
              subPath: peer-finder
            - name: data
              mountPath: /home/nacos/data
              subPath: data
            - name: log
              mountPath: /home/nacos/logs
              subPath: logs
            - mountPath: /home/nacos/conf/application.properties
              name: config
              subPath: application.properties
      volumes:
        - configMap:
            defaultMode: 420
            name: nacos-conf
          name: config
      {{- if not .Values.persistence.enabled  }}
        - name: data
          emptyDir: {}
        - name: log
          emptyDir: {}
  {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
  {{- toYaml .Values.persistence.data | nindent 8 }}
    - metadata:
        name: log
      spec:
  {{- toYaml .Values.persistence.logdata | nindent 8 }}
  {{- end }}
